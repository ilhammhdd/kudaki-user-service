// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kafka.proto

package entities;

public final class Kafka {
  private Kafka() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code kafka.Topics}
   */
  public enum Topics
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>USER = 0;</code>
     */
    USER(0),
    /**
     * <code>SHOP = 1;</code>
     */
    SHOP(1),
    /**
     * <code>MOUNTAIN = 2;</code>
     */
    MOUNTAIN(2),
    /**
     * <code>ITEM = 3;</code>
     */
    ITEM(3),
    /**
     * <code>REVIEW = 4;</code>
     */
    REVIEW(4),
    /**
     * <code>EVENT = 5;</code>
     */
    EVENT(5),
    /**
     * <code>RENT = 6;</code>
     */
    RENT(6),
    /**
     * <code>COMMAND = 7;</code>
     */
    COMMAND(7),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>USER = 0;</code>
     */
    public static final int USER_VALUE = 0;
    /**
     * <code>SHOP = 1;</code>
     */
    public static final int SHOP_VALUE = 1;
    /**
     * <code>MOUNTAIN = 2;</code>
     */
    public static final int MOUNTAIN_VALUE = 2;
    /**
     * <code>ITEM = 3;</code>
     */
    public static final int ITEM_VALUE = 3;
    /**
     * <code>REVIEW = 4;</code>
     */
    public static final int REVIEW_VALUE = 4;
    /**
     * <code>EVENT = 5;</code>
     */
    public static final int EVENT_VALUE = 5;
    /**
     * <code>RENT = 6;</code>
     */
    public static final int RENT_VALUE = 6;
    /**
     * <code>COMMAND = 7;</code>
     */
    public static final int COMMAND_VALUE = 7;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Topics valueOf(int value) {
      return forNumber(value);
    }

    public static Topics forNumber(int value) {
      switch (value) {
        case 0: return USER;
        case 1: return SHOP;
        case 2: return MOUNTAIN;
        case 3: return ITEM;
        case 4: return REVIEW;
        case 5: return EVENT;
        case 6: return RENT;
        case 7: return COMMAND;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Topics>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Topics> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Topics>() {
            public Topics findValueByNumber(int number) {
              return Topics.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return entities.Kafka.getDescriptor().getEnumTypes().get(0);
    }

    private static final Topics[] VALUES = values();

    public static Topics valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Topics(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:kafka.Topics)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013kafka.proto\022\005kafka*b\n\006Topics\022\010\n\004USER\020\000" +
      "\022\010\n\004SHOP\020\001\022\014\n\010MOUNTAIN\020\002\022\010\n\004ITEM\020\003\022\n\n\006RE" +
      "VIEW\020\004\022\t\n\005EVENT\020\005\022\010\n\004RENT\020\006\022\013\n\007COMMAND\020\007" +
      "B=\n\010entitiesZ1github.com/ilhammhdd/kudak" +
      "i-user-service/entitiesb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
