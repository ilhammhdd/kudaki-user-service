// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/store.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	events "github.com/ilhammhdd/kudaki-entities/events"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("rpc/store.proto", fileDescriptor_4e215feb7542d463) }

var fileDescriptor_4e215feb7542d463 = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xc1, 0x4a, 0xc4, 0x30,
	0x14, 0x45, 0x41, 0xd1, 0x45, 0x36, 0x42, 0x10, 0x17, 0x41, 0x10, 0x41, 0x50, 0x04, 0x13, 0xd0,
	0x2f, 0xa8, 0xb8, 0x71, 0x5b, 0x77, 0x75, 0xd5, 0xe6, 0xbd, 0x99, 0x86, 0x36, 0x4d, 0x26, 0x79,
	0xed, 0x17, 0xcd, 0x87, 0x0e, 0xd3, 0xe9, 0xd0, 0xe9, 0x90, 0xd9, 0x25, 0x9c, 0x7b, 0xee, 0x85,
	0xc7, 0xee, 0x82, 0xd7, 0x2a, 0x92, 0x0b, 0x28, 0x7d, 0x70, 0xe4, 0xf8, 0x75, 0xf0, 0x5a, 0x70,
	0x1c, 0xb0, 0xa3, 0x78, 0x0a, 0x3e, 0xb7, 0x57, 0xec, 0xe6, 0x6f, 0xff, 0xe7, 0xff, 0x4c, 0x64,
	0x00, 0xe3, 0x7b, 0x15, 0x5c, 0x47, 0xbf, 0x84, 0x36, 0xc7, 0x4d, 0x8f, 0x91, 0x10, 0xf8, 0xb3,
	0x1c, 0x65, 0x79, 0x39, 0x22, 0xc4, 0x14, 0x59, 0xf2, 0x0c, 0x00, 0x81, 0x17, 0xec, 0xfe, 0x07,
	0x5b, 0x24, 0x5c, 0x42, 0xfe, 0x32, 0x39, 0x29, 0x38, 0x37, 0x3f, 0x26, 0x9b, 0x0f, 0x0e, 0xf0,
	0x8a, 0x3d, 0xe4, 0x48, 0xc1, 0xe0, 0x70, 0xde, 0xfe, 0x3a, 0x79, 0x69, 0x1c, 0xe7, 0x81, 0xa7,
	0xe4, 0x40, 0x3c, 0x7a, 0xf0, 0xfd, 0x5e, 0xbc, 0xad, 0x0d, 0xd5, 0x7d, 0x25, 0xb5, 0xb3, 0xca,
	0xb4, 0x75, 0x69, 0x6d, 0x0d, 0xa0, 0x9a, 0x1e, 0xca, 0xc6, 0x7c, 0x60, 0x47, 0x86, 0x0c, 0x46,
	0x15, 0xbc, 0xae, 0x6e, 0xc7, 0xcb, 0x7e, 0xed, 0x02, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x72, 0xf3,
	0xc4, 0x85, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StoreClient is the client API for Store service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StoreClient interface {
	AddStorefrontItemRequested(ctx context.Context, in *events.AddStorefrontItemRequested, opts ...grpc.CallOption) (*events.StorefrontItemAdded, error)
	DeleteStorefrontItem(ctx context.Context, in *events.DeleteStorefrontItemRequested, opts ...grpc.CallOption) (*events.StorefrontItemDeleted, error)
	RetrieveStorefrontItem(ctx context.Context, in *events.RetrieveStorefrontItemsRequested, opts ...grpc.CallOption) (*events.StorefrontItemsRetrieved, error)
}

type storeClient struct {
	cc *grpc.ClientConn
}

func NewStoreClient(cc *grpc.ClientConn) StoreClient {
	return &storeClient{cc}
}

func (c *storeClient) AddStorefrontItemRequested(ctx context.Context, in *events.AddStorefrontItemRequested, opts ...grpc.CallOption) (*events.StorefrontItemAdded, error) {
	out := new(events.StorefrontItemAdded)
	err := c.cc.Invoke(ctx, "/rpc.Store/AddStorefrontItemRequested", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) DeleteStorefrontItem(ctx context.Context, in *events.DeleteStorefrontItemRequested, opts ...grpc.CallOption) (*events.StorefrontItemDeleted, error) {
	out := new(events.StorefrontItemDeleted)
	err := c.cc.Invoke(ctx, "/rpc.Store/DeleteStorefrontItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) RetrieveStorefrontItem(ctx context.Context, in *events.RetrieveStorefrontItemsRequested, opts ...grpc.CallOption) (*events.StorefrontItemsRetrieved, error) {
	out := new(events.StorefrontItemsRetrieved)
	err := c.cc.Invoke(ctx, "/rpc.Store/RetrieveStorefrontItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StoreServer is the server API for Store service.
type StoreServer interface {
	AddStorefrontItemRequested(context.Context, *events.AddStorefrontItemRequested) (*events.StorefrontItemAdded, error)
	DeleteStorefrontItem(context.Context, *events.DeleteStorefrontItemRequested) (*events.StorefrontItemDeleted, error)
	RetrieveStorefrontItem(context.Context, *events.RetrieveStorefrontItemsRequested) (*events.StorefrontItemsRetrieved, error)
}

// UnimplementedStoreServer can be embedded to have forward compatible implementations.
type UnimplementedStoreServer struct {
}

func (*UnimplementedStoreServer) AddStorefrontItemRequested(ctx context.Context, req *events.AddStorefrontItemRequested) (*events.StorefrontItemAdded, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddStorefrontItemRequested not implemented")
}
func (*UnimplementedStoreServer) DeleteStorefrontItem(ctx context.Context, req *events.DeleteStorefrontItemRequested) (*events.StorefrontItemDeleted, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteStorefrontItem not implemented")
}
func (*UnimplementedStoreServer) RetrieveStorefrontItem(ctx context.Context, req *events.RetrieveStorefrontItemsRequested) (*events.StorefrontItemsRetrieved, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveStorefrontItem not implemented")
}

func RegisterStoreServer(s *grpc.Server, srv StoreServer) {
	s.RegisterService(&_Store_serviceDesc, srv)
}

func _Store_AddStorefrontItemRequested_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(events.AddStorefrontItemRequested)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).AddStorefrontItemRequested(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Store/AddStorefrontItemRequested",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).AddStorefrontItemRequested(ctx, req.(*events.AddStorefrontItemRequested))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_DeleteStorefrontItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(events.DeleteStorefrontItemRequested)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).DeleteStorefrontItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Store/DeleteStorefrontItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).DeleteStorefrontItem(ctx, req.(*events.DeleteStorefrontItemRequested))
	}
	return interceptor(ctx, in, info, handler)
}

func _Store_RetrieveStorefrontItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(events.RetrieveStorefrontItemsRequested)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StoreServer).RetrieveStorefrontItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Store/RetrieveStorefrontItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StoreServer).RetrieveStorefrontItem(ctx, req.(*events.RetrieveStorefrontItemsRequested))
	}
	return interceptor(ctx, in, info, handler)
}

var _Store_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Store",
	HandlerType: (*StoreServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddStorefrontItemRequested",
			Handler:    _Store_AddStorefrontItemRequested_Handler,
		},
		{
			MethodName: "DeleteStorefrontItem",
			Handler:    _Store_DeleteStorefrontItem_Handler,
		},
		{
			MethodName: "RetrieveStorefrontItem",
			Handler:    _Store_RetrieveStorefrontItem_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc/store.proto",
}
