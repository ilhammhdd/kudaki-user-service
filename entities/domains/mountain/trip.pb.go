// Code generated by protoc-gen-go. DO NOT EDIT.
// source: domains/mountain/trip.proto

package mountain

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Trip struct {
	Uuid                 string               `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Person               uint32               `protobuf:"varint,2,opt,name=person,proto3" json:"person,omitempty"`
	Departure            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=departure,proto3" json:"departure,omitempty"`
	RecomendedGears      *RecomendedGear      `protobuf:"bytes,4,opt,name=recomended_gears,json=recomendedGears,proto3" json:"recomended_gears,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Trip) Reset()         { *m = Trip{} }
func (m *Trip) String() string { return proto.CompactTextString(m) }
func (*Trip) ProtoMessage()    {}
func (*Trip) Descriptor() ([]byte, []int) {
	return fileDescriptor_f0f2b8007146c0bd, []int{0}
}

func (m *Trip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trip.Unmarshal(m, b)
}
func (m *Trip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trip.Marshal(b, m, deterministic)
}
func (m *Trip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trip.Merge(m, src)
}
func (m *Trip) XXX_Size() int {
	return xxx_messageInfo_Trip.Size(m)
}
func (m *Trip) XXX_DiscardUnknown() {
	xxx_messageInfo_Trip.DiscardUnknown(m)
}

var xxx_messageInfo_Trip proto.InternalMessageInfo

func (m *Trip) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Trip) GetPerson() uint32 {
	if m != nil {
		return m.Person
	}
	return 0
}

func (m *Trip) GetDeparture() *timestamp.Timestamp {
	if m != nil {
		return m.Departure
	}
	return nil
}

func (m *Trip) GetRecomendedGears() *RecomendedGear {
	if m != nil {
		return m.RecomendedGears
	}
	return nil
}

func init() {
	proto.RegisterType((*Trip)(nil), "domain.mountain.Trip")
}

func init() { proto.RegisterFile("domains/mountain/trip.proto", fileDescriptor_f0f2b8007146c0bd) }

var fileDescriptor_f0f2b8007146c0bd = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xbf, 0x4b, 0xfc, 0x40,
	0x10, 0xc5, 0xc9, 0xf7, 0x1b, 0x0e, 0x6e, 0x45, 0x4e, 0xb6, 0x90, 0x10, 0x8b, 0x0b, 0x16, 0x92,
	0xe6, 0x76, 0x41, 0x1b, 0xeb, 0x43, 0x10, 0x2c, 0xc3, 0x55, 0x36, 0xb2, 0xc9, 0x8e, 0xc9, 0x70,
	0xb7, 0x3f, 0x98, 0xdd, 0xf5, 0x6f, 0xf3, 0xcf, 0x13, 0x92, 0x8b, 0x62, 0xec, 0xe6, 0xf1, 0xde,
	0x3c, 0x3e, 0x33, 0xec, 0x46, 0x3b, 0xa3, 0xd0, 0x06, 0x69, 0x5c, 0xb2, 0x51, 0xa1, 0x95, 0x91,
	0xd0, 0x0b, 0x4f, 0x2e, 0x3a, 0xbe, 0x99, 0x4c, 0x31, 0x7b, 0xe5, 0xb6, 0x77, 0xae, 0x3f, 0x81,
	0x1c, 0xed, 0x36, 0xbd, 0xcb, 0x88, 0x06, 0x42, 0x54, 0xe6, 0xbc, 0x51, 0xde, 0xfd, 0xa9, 0x23,
	0xe8, 0x9c, 0x01, 0xab, 0x41, 0xbf, 0xf5, 0xa0, 0x68, 0xca, 0xdd, 0x7e, 0x66, 0x2c, 0x3f, 0x10,
	0x7a, 0xce, 0x59, 0x9e, 0x12, 0xea, 0x22, 0xab, 0xb2, 0x7a, 0xdd, 0x8c, 0x33, 0xbf, 0x66, 0x2b,
	0x0f, 0x14, 0x9c, 0x2d, 0xfe, 0x55, 0x59, 0x7d, 0xd9, 0x9c, 0x15, 0x7f, 0x64, 0x6b, 0x0d, 0x5e,
	0x51, 0x4c, 0x04, 0xc5, 0xff, 0x2a, 0xab, 0x2f, 0xee, 0x4b, 0x31, 0x11, 0x89, 0x99, 0x48, 0x1c,
	0x66, 0xa2, 0xe6, 0x27, 0xcc, 0x5f, 0xd8, 0xd5, 0x82, 0x23, 0x14, 0xf9, 0x58, 0xb0, 0x15, 0x8b,
	0x1b, 0x45, 0xf3, 0x1d, 0x7c, 0x06, 0x45, 0xcd, 0x86, 0x7e, 0xe9, 0xb0, 0x7f, 0x7a, 0xdd, 0xf7,
	0x18, 0x87, 0xd4, 0x8a, 0xce, 0x19, 0x89, 0xa7, 0x41, 0x19, 0x33, 0x68, 0x2d, 0x8f, 0x49, 0xab,
	0x23, 0xee, 0x52, 0x00, 0xda, 0x05, 0xa0, 0x0f, 0xec, 0x40, 0x82, 0x8d, 0x18, 0x11, 0x82, 0x5c,
	0xbe, 0xa5, 0x5d, 0x8d, 0xc0, 0x0f, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x29, 0x20, 0xd0, 0xc8,
	0x80, 0x01, 0x00, 0x00,
}
