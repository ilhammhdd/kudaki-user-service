// Code generated by protoc-gen-go. DO NOT EDIT.
// source: kafka.proto

package entities

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Topics int32

const (
	Topics_USER         Topics = 0
	Topics_MOUNTAIN     Topics = 1
	Topics_KUDAKI_EVENT Topics = 2
	Topics_RENTAL       Topics = 3
)

var Topics_name = map[int32]string{
	0: "USER",
	1: "MOUNTAIN",
	2: "KUDAKI_EVENT",
	3: "RENTAL",
}

var Topics_value = map[string]int32{
	"USER":         0,
	"MOUNTAIN":     1,
	"KUDAKI_EVENT": 2,
	"RENTAL":       3,
}

func (x Topics) String() string {
	return proto.EnumName(Topics_name, int32(x))
}

func (Topics) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_68928ed13de9fb92, []int{0}
}

type Partition int32

const (
	Partition_EVENT   Partition = 0
	Partition_COMMAND Partition = 1
	Partition_QUERY   Partition = 2
)

var Partition_name = map[int32]string{
	0: "EVENT",
	1: "COMMAND",
	2: "QUERY",
}

var Partition_value = map[string]int32{
	"EVENT":   0,
	"COMMAND": 1,
	"QUERY":   2,
}

func (x Partition) String() string {
	return proto.EnumName(Partition_name, int32(x))
}

func (Partition) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_68928ed13de9fb92, []int{1}
}

func init() {
	proto.RegisterEnum("kafka.Topics", Topics_name, Topics_value)
	proto.RegisterEnum("kafka.Partition", Partition_name, Partition_value)
}

func init() { proto.RegisterFile("kafka.proto", fileDescriptor_68928ed13de9fb92) }

var fileDescriptor_68928ed13de9fb92 = []byte{
	// 201 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x24, 0x8e, 0x41, 0x4f, 0x83, 0x30,
	0x1c, 0x47, 0xb7, 0xe9, 0x70, 0xfb, 0x6f, 0x87, 0xa6, 0x1f, 0x63, 0xc9, 0x20, 0x66, 0x77, 0x93,
	0x2a, 0x3d, 0x10, 0xa4, 0x28, 0xb6, 0x26, 0x7a, 0x31, 0x05, 0xaa, 0x34, 0x15, 0x4a, 0xda, 0xe2,
	0xe7, 0x37, 0xb0, 0xe3, 0xef, 0x97, 0x97, 0x97, 0x07, 0x07, 0x23, 0xbf, 0x8d, 0x8c, 0x47, 0x67,
	0x83, 0xc5, 0xdb, 0x65, 0x9c, 0x1e, 0x20, 0xe2, 0x76, 0xd4, 0x8d, 0xc7, 0x3b, 0xb8, 0x15, 0x6f,
	0xb4, 0x42, 0x2b, 0x7c, 0x84, 0x5d, 0x51, 0x0a, 0xc6, 0x49, 0xc6, 0xd0, 0x1a, 0x23, 0x38, 0xe6,
	0x22, 0x25, 0x79, 0xf6, 0x45, 0xdf, 0x29, 0xe3, 0x68, 0x83, 0x01, 0xa2, 0x8a, 0x32, 0x4e, 0x9e,
	0xd1, 0xcd, 0x29, 0x86, 0xfd, 0x8b, 0x74, 0x41, 0x07, 0x6d, 0x07, 0xbc, 0x87, 0xed, 0x95, 0x59,
	0xe1, 0x03, 0xdc, 0x3d, 0x95, 0x45, 0x41, 0x58, 0x8a, 0xd6, 0xf3, 0xff, 0x2a, 0x68, 0xf5, 0x81,
	0x36, 0x8f, 0x97, 0xcf, 0xfb, 0x1f, 0x1d, 0xba, 0xa9, 0x8e, 0x1b, 0xdb, 0x27, 0xfa, 0xb7, 0x93,
	0x7d, 0xdf, 0xb5, 0x6d, 0x62, 0xa6, 0x56, 0x1a, 0x7d, 0x9e, 0xbc, 0x72, 0x67, 0xaf, 0xdc, 0x9f,
	0x6e, 0x54, 0xa2, 0x86, 0xd9, 0xab, 0x7c, 0x1d, 0x2d, 0xc9, 0x97, 0xff, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x62, 0xe6, 0xba, 0x9b, 0xc1, 0x00, 0x00, 0x00,
}
